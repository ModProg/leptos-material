@use 'util' as *;
@use 'tint';

$duration: 280ms;
$easing: cubic-bezier(0.2, 0, 0, 1);

// Adapted from https://github.com/material-components/material-web/blob/master/elevation/lib/_elevation.scss
@mixin elevated {
    // TODO: we need to combine with other animations
    transition-property: box-shadow;
    transition-duration: $duration;
    transition-timing-function: $easing;

    // Key box shadows
    // level0: box-shadow: 0px 0px 0px 0px;
    // level1: box-shadow: 0px 1px 2px 0px;
    // level2: box-shadow: 0px 1px 2px 0px;
    // level3: box-shadow: 0px 1px 3px 0px;
    // level4: box-shadow: 0px 2px 3px 0px;
    // level5: box-shadow: 0px 4px 4px 0px;

    // Add a clamped value for each level to build the correct values.
    // Sass will simplify nested calc()s.

    $elevation: md(elevation);

    // 0 + 0 = 0
    // $level0-y: 0; // +0 is a no-op
    // 0 + 1 = 1
    $y1: clamp(0, $elevation, 1);
    // 1 + 0 = 1
    // $level2-y: 0; // +0 is a no-op
    // 1 + 0 = 1
    // $level3-y: 0; // +0 is a no-op
    // 1 + 1 = 2
    $y4: clamp(0, $elevation - 3, 1);
    // 2 + 2 = 4
    $y5: calc(2 * clamp(0, $elevation - 4, 1));
    // Convert to px.
    $y: calc(1px * ($y1 + $y4 + $y5));

    // 0 + 0 = 0
    // $level0-blur: 0; // +0 is a no-op
    // 0 + 2 = 2
    $blur1: calc(2 * clamp(0, $elevation, 1));
    // 2 + 0 = 2
    // $level2-blur: 0; // +0 is a no-op
    // 2 + 1 = 3
    $blur3: clamp(0, $elevation - 2, 1);
    // 3 + 0 = 3
    // $level4-blur: 0; // +0 is a no-op
    // 3 + 1 = 4
    $blur5: clamp(0, $elevation - 4, 1);
    // Convert to px.
    $blur: calc(1px * ($blur1 + $blur3 + $blur5));
    $key_shadow: 0px $y $blur 0px rgb(theme(shadow) / 0.3);

    // Ambient box shadows
    // level0: box-shadow: 0px 0px 0px 0px;
    // level1: box-shadow: 0px 1px 3px 1px;
    // level2: box-shadow: 0px 2px 6px 2px;
    // level3: box-shadow: 0px 4px 8px 3px;
    // level4: box-shadow: 0px 6px 10px 4px;
    // level5: box-shadow: 0px 8px 12px 6px;

    // Add a clamped value for each level to build the correct values.
    // Sass will simplify nested calc()s.

    // 0 + 0 = 0
    // $level0-y: 0; // +0 is a no-op
    // 0 + 1 = 1
    $y1: clamp(0, $elevation, 1);
    // 1 + 1 = 2
    $y2: clamp(0, $elevation - 1, 1);
    // 2 + 2 = 4
    // $level3-y: 2 * clamp(0, var(--_level) - 2, 1);
    // 4 + 2 = 6
    // $level4-y: 2 * clamp(0, var(--_level) - 3, 1);
    // 6 + 2 = 8
    // $level5-y: 2 * clamp(0, var(--_level) - 4, 1);
    // Levels 3-5 can be simplified by changing the max clamp value.
    $y_3_to_5: calc(2 * clamp(0, $elevation - 2, 3));
    // Convert to px.
    $y: calc(1px * ($y1 + $y2 + $y_3_to_5));

    // 0 + 0 = 0
    // $level0-blur: 0; // +0 is a no-op
    // 0 + 3 = 3
    // $level1-blur: 3 * clamp(0, var(--_level), 1);
    // 3 + 3 = 6
    // $level2-blur: 3 * clamp(0, var(--_level) - 1, 1);
    // Levels 1-2 can be simplified by changing the max clamp value.
    $blur_1_to_2: calc(3 * clamp(0, $elevation, 2));
    // 6 + 2 = 8
    // $level3-blur: 2 * clamp(0, var(--_level) - 2, 1);
    // 8 + 2 = 10
    // $level4-blur: 2 * clamp(0, var(--_level) - 3, 1);
    // 10 + 2 = 12
    // $level5-blur: 2 * clamp(0, var(--_level) - 4, 1);
    // Levels 3-5 can be simplified by changing the max clamp value.
    $blur_3_to_5: calc(2 * clamp(0, $elevation - 2, 3));
    // Convert to px.
    $blur: calc(1px * ($blur_1_to_2 + $blur_3_to_5));

    // 0 + 0 = 0
    // $level0-spread: 0; // +0 is a no-op
    // 0 + 1 = 1
    // $level1-spread: clamp(0, var(--_level), 1);
    // 1 + 1 = 2
    // $level2-spread: clamp(0, var(--_level) - 1, 1);
    // 2 + 1 = 3
    // $level3-spread: clamp(0, var(--_level) - 2, 1);
    // 3 + 1 = 4
    // $level4-spread: clamp(0, var(--_level) - 3, 1);
    // 4 + 2 = 6
    // Levels 1-4 can be simplified by changing the max clamp value
    $spread_1_to_4: clamp(0, $elevation, 4);
    $spread_5: calc(2 * clamp(0, $elevation - 4, 1));
    // Convert to px.
    $spread: calc(1px * ($spread_1_to_4 + $spread_5));
    $ambient_shadow: 0px $y $blur $spread rgb(theme(shadow) / 0.15);

    box-shadow: $key_shadow, $ambient_shadow;

    &:after {
        @include tint.tinted;
        background-color: RGB(md(tint));

        // Surface tint opacities:
        // level0: opacity: 0;
        // level1: opacity: 0.05;
        // level2: opacity: 0.08;
        // level3: opacity: 0.11;
        // level4: opacity: 0.12;
        // level5: opacity: 0.14;

        // Add a clamped value for each level to build the correct values.
        // Sass will simplify nested calc()s.

        // 0 + 0 = 0
        // $level0-opacity: 0; // +0 is a no-op
        // 0 + 0.05 = 0.05
        $level1-opacity: clamp(0, $elevation, 0.05);
        // 0.05 + 0.03 = 0.08
        $level2-opacity: clamp(0, $elevation - 1, 0.03);
        // 0.08 + 0.03 = 0.11
        $level3-opacity: clamp(0, $elevation - 2, 0.03);
        // (can't simplify levels 2-3 since the value is < 1)
        // 0.11 + 0.01 = 0.12
        $level4-opacity: clamp(0, $elevation - 3, 0.01);
        // 0.12 + 0.02 = 0.14
        $level5-opacity: clamp(0, $elevation - 4, 0.02);
        $opacity: calc(
            $level1-opacity + $level2-opacity + $level3-opacity +
                $level4-opacity + $level5-opacity
        );

        opacity: $opacity;
    }
}
